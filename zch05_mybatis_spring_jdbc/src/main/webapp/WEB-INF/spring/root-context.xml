<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- log4jdbc 설정전
		오라클.
			드라이버 클래스명 : oracle.jdbc.driver.OracleDriver
			JDBC URL          : jdbc:oracle:thin:@[SERVER_ADDRESS]:[PORT]:[DB_NAME]
		MySql.
			드라이버 클래스명 : oracle.mysql.jdbc.driver
			JDBC URL          : jdbc:mysql://[SERVER_ADDRESS]:[PORT]:[DB_NAME]
		MsSql.
			드라이버 클래스명 : com.microsoft.SQL Server.jdbc.SQL ServerDriver
			JDBC URL          : jdbc:SQL Server://[SERVER_ADDRESS]:[PORT]:databasename=[DB_NAME]
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/zbook_ex"></property>
		-->
		
		<!-- log4jdbc 설정후		 -->
		<property name="driverClassName" 
				  value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<!--
			DbName/?zeroDateTimeBehavior=convertToNull
			Error : JAVA – Value ‘0000-00-00’ can not be represented as java.sql.Timestamp
			reference : http://myblog.opendocs.co.kr/archives/836
				이 에러는 mysql의 테이블 컬럼에 디폴트 값을 0000-00-00 00:00:00로 정의 하였을때 
				Connector/J driver에서 에러로 판단해서 발생하게 되므로 접속시 접속시 자동으로 
				null로 변환해주는 옵션을 추가한다.
				/zch05_mybatis_spring_jdbc/src/main/webapp/WEB-INF/spring/root-context.xml 에서
				jdbc:mysql://{IP}:{포트}/{디비명}?zeroDateTimeBehavior=convertToNull
				insert into ztbl_comment (user_id,   comment_content,    reg_date)
								   values(#{user_id},#{comment_content}, now())	
		 -->				  
		<property name="url" 
				  value="jdbc:log4jdbc:mysql://127.0.0.1:3306/zmybatis_ldg?zeroDateTimeBehavior=convertToNull"></property>
		
		<property name="username" value="JoyWins"></property>
		<property name="password" value="ZSql@"></property>		
	</bean>	
	
	<!--
		DataSource 설정으로 JDBC 연결후, MyBatis와 MySql을 연동시킴. 
		90p.SqlSessionFactory : myBatis와 스프링의 Connection 생성.
	 -->		 		
	<bean id="sqlSessionFactory" 
	      class="org.mybatis.spring.SqlSessionFactoryBean">	   
	    <!-- 
	    	86p.JDBC커넥션을 처리하는 DataSource와 mybatis를 연결.
	     -->
	 	<property name="dataSource" ref="dataSource" />	
	 	
	 	<!-- 
	 		92p.mybatis 전용 설정파일을 스프링과 함께 작동하도록 연결함.
	 		/zex00/src/main/resources/mybatis-config.xml
	 	 -->
	 	<property name="configLocation" 
				value="classpath:/mybatis-config.xml"></property>	
	 	<!-- 
	 		132p.MyBatis가 동작하면 XML Mapper를 인식하도록 함.
	 		/zex00/src/main/resources/mappers/memberMapper.xml
	 		mapperLocations라는 속성을 추가하고, 작성된 mappers 폴더내의 어떤 폴더에서건
	 		Mapper.xml로 끝나면 자동으로 인식하도록 함.
	 	 -->				
		<property name="mapperLocations" 
		      value="classpath:mappers/**/*Mapper.xml"></property>
					
	</bean>	 
	
	<!-- 
		133p.MyBatis에서 DAO를 이용하는 경우, SqlSessionTemplate라는 것을 이용해서 DAO를 구현함.
		mybatis-spring에서 제공하는 SqlSessionTempalte객체는 기본적인 트랜잭션 관리나 쓰레드 처리의
		안정성등을 보장해주고, 개발자들이 직접 DB 연결, 종료작업하는 것을 줄여줌.
		SqlSessionFactory를 생성자로 주입함.
	 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 
	 	  destroy-method="clearCache">
	  <constructor-arg name="sqlSessionFactory" 
	    	ref="sqlSessionFactory"></constructor-arg>
	</bean>
		
	<!-- 
		스프링이 MemberDAOImpl가 있는 패키지를 스캔해야만 @Repository 어노테이션이 작동해서
		스프링의 빈으로 등록함.
		패키지탐색기에서 MemberDAOImpl.java 파일 아이콘 우측상단에 s글자가 보이면 등록된 것임. 
	 -->
	<context:component-scan base-package="yes.joywins.dao"></context:component-scan>
	<context:component-scan base-package="yes.joywins.service"></context:component-scan>		
	
		
</beans>
